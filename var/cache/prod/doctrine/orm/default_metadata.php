<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Employee__CLASSMETADATA__' => 0,
'App__Entity__Event__CLASSMETADATA__' => 1,
'App__Entity__MeetingRoom__CLASSMETADATA__' => 2,
'App__Entity__Office__CLASSMETADATA__' => 3,
'App__Entity__Organization__CLASSMETADATA__' => 4,
'App__Entity__PushSubscription__CLASSMETADATA__' => 5,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Employee',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\EmployeeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'surname' => $o[3],
                        'patronymic' => $o[4],
                        'email' => $o[5],
                        'password' => $o[6],
                        'roles' => $o[7],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'surname' => 'surname',
                        'patronymic' => 'patronymic',
                        'email' => 'email',
                        'password' => 'password',
                        'roles' => 'roles',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'surname' => 'surname',
                        'patronymic' => 'patronymic',
                        'email' => 'email',
                        'password' => 'password',
                        'roles' => 'roles',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'employee',
                    ],
                ],
                'associationMappings' => [
                    [
                        'organization' => $o[8],
                        'events' => $o[10],
                        'pushSubscriptions' => $o[11],
                    ],
                ],
                'idGenerator' => [
                    $o[12],
                ],
                'name' => [
                    'App\\Entity\\Employee',
                    9 => 'organization_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'json',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'surname',
                    'patronymic',
                    'email',
                    'password',
                    'roles',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'surname',
                    'patronymic',
                    'email',
                    'password',
                    'roles',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                    255,
                    512,
                ],
                'unique' => [
                    5 => true,
                    9 => false,
                ],
                'fetch' => [
                    8 => 2,
                    10 => 2,
                    2,
                ],
                'sourceEntity' => [
                    8 => 'App\\Entity\\Employee',
                    10 => 'App\\Entity\\Employee',
                    'App\\Entity\\Employee',
                ],
                'sourceToTargetKeyColumns' => [
                    8 => [
                        'organization_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    8 => [
                        'id' => 'organization_id',
                    ],
                ],
                'joinColumns' => [
                    8 => [
                        $o[9],
                    ],
                ],
                'joinColumnFieldNames' => [
                    8 => [
                        'organization_id' => 'organization_id',
                    ],
                ],
                'onDelete' => [
                    9 => 'CASCADE',
                ],
                'nullable' => [
                    9 => false,
                ],
                'referencedColumnName' => [
                    9 => 'id',
                ],
                'mappedBy' => [
                    10 => 'employees',
                    'employee',
                ],
                'cascade' => [
                    11 => [
                        'persist',
                        'remove',
                    ],
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    8 => 'organization',
                    10 => 'events',
                    'pushSubscriptions',
                ],
                'targetEntity' => [
                    8 => 'App\\Entity\\Organization',
                    10 => 'App\\Entity\\Event',
                    'App\\Entity\\PushSubscription',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTableMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTableMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Event',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\EventRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'description' => $o[3],
                        'date' => $o[4],
                        'time_start' => $o[5],
                        'time_end' => $o[6],
                        'recurrenceType' => $o[7],
                        'recurrenceInterval' => $o[8],
                        'recurrenceEnd' => $o[9],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'date' => 'date',
                        'time_start' => 'time_start',
                        'time_end' => 'time_end',
                        'recurrence_type' => 'recurrenceType',
                        'recurrence_interval' => 'recurrenceInterval',
                        'recurrence_end' => 'recurrenceEnd',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'date' => 'date',
                        'time_start' => 'time_start',
                        'time_end' => 'time_end',
                        'recurrenceType' => 'recurrence_type',
                        'recurrenceInterval' => 'recurrence_interval',
                        'recurrenceEnd' => 'recurrence_end',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'event',
                    ],
                ],
                'associationMappings' => [
                    [
                        'author' => $o[10],
                        'meeting_room' => $o[12],
                        'employees' => $o[14],
                        'parentEvent' => $o[18],
                    ],
                ],
                'idGenerator' => [
                    $o[20],
                ],
                'name' => [
                    'App\\Entity\\Event',
                    11 => 'employee_id',
                    13 => 'meeting_room_id',
                    15 => 'event_employee',
                    'event_id',
                    'employee_id',
                    19 => 'parent_event_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'date',
                    'time',
                    'time',
                    'string',
                    'integer',
                    'date',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'description',
                    'date',
                    'time_start',
                    'time_end',
                    'recurrenceType',
                    'recurrenceInterval',
                    'recurrenceEnd',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'description',
                    'date',
                    'time_start',
                    'time_end',
                    'recurrence_type',
                    'recurrence_interval',
                    'recurrence_end',
                ],
                'length' => [
                    2 => 255,
                    255,
                ],
                'nullable' => [
                    7 => true,
                    true,
                    true,
                    11 => false,
                    13 => false,
                ],
                'enumType' => [
                    7 => 'App\\Enum\\RecurrenceType',
                ],
                'fetch' => [
                    10 => 2,
                    12 => 2,
                    14 => 2,
                    18 => 2,
                ],
                'sourceEntity' => [
                    10 => 'App\\Entity\\Event',
                    12 => 'App\\Entity\\Event',
                    14 => 'App\\Entity\\Event',
                    18 => 'App\\Entity\\Event',
                ],
                'sourceToTargetKeyColumns' => [
                    10 => [
                        'employee_id' => 'id',
                    ],
                    12 => [
                        'meeting_room_id' => 'id',
                    ],
                    18 => [
                        'parent_event_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    10 => [
                        'id' => 'employee_id',
                    ],
                    12 => [
                        'id' => 'meeting_room_id',
                    ],
                    18 => [
                        'id' => 'parent_event_id',
                    ],
                ],
                'joinColumns' => [
                    10 => [
                        $o[11],
                    ],
                    12 => [
                        $o[13],
                    ],
                    15 => [
                        $o[16],
                    ],
                    18 => [
                        $o[19],
                    ],
                ],
                'joinColumnFieldNames' => [
                    10 => [
                        'employee_id' => 'employee_id',
                    ],
                    12 => [
                        'meeting_room_id' => 'meeting_room_id',
                    ],
                    18 => [
                        'parent_event_id' => 'parent_event_id',
                    ],
                ],
                'unique' => [
                    11 => false,
                    13 => false,
                ],
                'onDelete' => [
                    11 => 'CASCADE',
                    13 => 'CASCADE',
                    16 => 'CASCADE',
                    'CASCADE',
                ],
                'referencedColumnName' => [
                    11 => 'id',
                    13 => 'id',
                    16 => 'id',
                    'id',
                    19 => 'id',
                ],
                'inversedBy' => [
                    12 => 'events',
                    14 => 'events',
                ],
                'isOnDeleteCascade' => [
                    14 => true,
                ],
                'joinTable' => [
                    14 => $o[15],
                ],
                'joinTableColumns' => [
                    14 => [
                        'event_id',
                        'employee_id',
                    ],
                ],
                'relationToSourceKeyColumns' => [
                    14 => [
                        'event_id' => 'id',
                    ],
                ],
                'relationToTargetKeyColumns' => [
                    14 => [
                        'employee_id' => 'id',
                    ],
                ],
                'inverseJoinColumns' => [
                    15 => [
                        $o[17],
                    ],
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    10 => 'author',
                    12 => 'meeting_room',
                    14 => 'employees',
                    18 => 'parentEvent',
                ],
                'targetEntity' => [
                    10 => 'App\\Entity\\Employee',
                    12 => 'App\\Entity\\MeetingRoom',
                    14 => 'App\\Entity\\Employee',
                    18 => 'App\\Entity\\Event',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTableMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTableMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\MeetingRoom',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\MeetingRoomRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'description' => $o[3],
                        'calendar_code' => $o[4],
                        'photo_path' => $o[5],
                        'size' => $o[6],
                        'status' => $o[7],
                        'is_public' => $o[8],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'calendar_code' => 'calendar_code',
                        'photo_path' => 'photo_path',
                        'size' => 'size',
                        'status' => 'status',
                        'is_public' => 'is_public',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'description' => 'description',
                        'calendar_code' => 'calendar_code',
                        'photo_path' => 'photo_path',
                        'size' => 'size',
                        'status' => 'status',
                        'is_public' => 'is_public',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'meeting_room',
                    ],
                ],
                'associationMappings' => [
                    [
                        'office' => $o[9],
                        'employees' => $o[11],
                        'events' => $o[15],
                    ],
                ],
                'idGenerator' => [
                    $o[16],
                ],
                'name' => [
                    'App\\Entity\\MeetingRoom',
                    10 => 'office_id',
                    12 => 'meeting_room_access',
                    'meeting_room_id',
                    'employee_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'json',
                    'smallint',
                    'string',
                    'boolean',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'description',
                    'calendar_code',
                    'photo_path',
                    'size',
                    'status',
                    'is_public',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'description',
                    'calendar_code',
                    'photo_path',
                    'size',
                    'status',
                    'is_public',
                ],
                'length' => [
                    2 => 255,
                    512,
                    255,
                ],
                'unique' => [
                    2 => true,
                    4 => true,
                    10 => false,
                ],
                'enumType' => [
                    7 => 'App\\Enum\\Status',
                ],
                'fetch' => [
                    9 => 2,
                    11 => 2,
                    15 => 2,
                ],
                'sourceEntity' => [
                    9 => 'App\\Entity\\MeetingRoom',
                    11 => 'App\\Entity\\MeetingRoom',
                    15 => 'App\\Entity\\MeetingRoom',
                ],
                'sourceToTargetKeyColumns' => [
                    9 => [
                        'office_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    9 => [
                        'id' => 'office_id',
                    ],
                ],
                'joinColumns' => [
                    9 => [
                        $o[10],
                    ],
                    12 => [
                        $o[13],
                    ],
                ],
                'joinColumnFieldNames' => [
                    9 => [
                        'office_id' => 'office_id',
                    ],
                ],
                'onDelete' => [
                    10 => 'CASCADE',
                    13 => 'CASCADE',
                    'CASCADE',
                ],
                'nullable' => [
                    10 => false,
                ],
                'referencedColumnName' => [
                    10 => 'id',
                    13 => 'id',
                    'id',
                ],
                'isOnDeleteCascade' => [
                    11 => true,
                ],
                'joinTable' => [
                    11 => $o[12],
                ],
                'joinTableColumns' => [
                    11 => [
                        'meeting_room_id',
                        'employee_id',
                    ],
                ],
                'relationToSourceKeyColumns' => [
                    11 => [
                        'meeting_room_id' => 'id',
                    ],
                ],
                'relationToTargetKeyColumns' => [
                    11 => [
                        'employee_id' => 'id',
                    ],
                ],
                'inverseJoinColumns' => [
                    12 => [
                        $o[14],
                    ],
                ],
                'mappedBy' => [
                    15 => 'meeting_room',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    9 => 'office',
                    11 => 'employees',
                    15 => 'events',
                ],
                'targetEntity' => [
                    9 => 'App\\Entity\\Office',
                    11 => 'App\\Entity\\Employee',
                    15 => 'App\\Entity\\Event',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Office',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\OfficeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'city' => $o[3],
                        'time_zone' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'city' => 'city',
                        'time_zone' => 'time_zone',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'city' => 'city',
                        'time_zone' => 'time_zone',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'office',
                    ],
                ],
                'associationMappings' => [
                    [
                        'organization' => $o[5],
                        'meetingRooms' => $o[7],
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\Office',
                    6 => 'organization_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'smallint',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'city',
                    'time_zone',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'city',
                    'time_zone',
                ],
                'length' => [
                    2 => 255,
                    255,
                ],
                'fetch' => [
                    5 => 2,
                    7 => 2,
                ],
                'sourceEntity' => [
                    5 => 'App\\Entity\\Office',
                    7 => 'App\\Entity\\Office',
                ],
                'sourceToTargetKeyColumns' => [
                    5 => [
                        'organization_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    5 => [
                        'id' => 'organization_id',
                    ],
                ],
                'joinColumns' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'joinColumnFieldNames' => [
                    5 => [
                        'organization_id' => 'organization_id',
                    ],
                ],
                'unique' => [
                    6 => false,
                ],
                'onDelete' => [
                    6 => 'CASCADE',
                ],
                'nullable' => [
                    6 => false,
                ],
                'referencedColumnName' => [
                    6 => 'id',
                ],
                'mappedBy' => [
                    7 => 'office',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    5 => 'organization',
                    7 => 'meetingRooms',
                ],
                'targetEntity' => [
                    5 => 'App\\Entity\\Organization',
                    7 => 'App\\Entity\\MeetingRoom',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Organization',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\OrganizationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'status' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'status' => 'status',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'status' => 'status',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'organization',
                    ],
                ],
                'entityListeners' => [
                    [
                        'preUpdate' => [
                            [
                                'class' => 'App\\EventListener\\OrganizationStatusListener',
                                'method' => 'preUpdate',
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[4],
                ],
                'name' => [
                    'App\\Entity\\Organization',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'status',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'status',
                ],
                'length' => [
                    2 => 255,
                ],
                'enumType' => [
                    3 => 'App\\Enum\\Status',
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\PushSubscription',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PushSubscriptionRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'endpoint' => $o[2],
                        'authToken' => $o[3],
                        'p256dhKey' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'endpoint' => 'endpoint',
                        'auth_token' => 'authToken',
                        'p256dh_key' => 'p256dhKey',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'endpoint' => 'endpoint',
                        'authToken' => 'auth_token',
                        'p256dhKey' => 'p256dh_key',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'push_subscription',
                    ],
                ],
                'associationMappings' => [
                    [
                        'employee' => $o[5],
                    ],
                ],
                'idGenerator' => [
                    $o[7],
                ],
                'name' => [
                    'App\\Entity\\PushSubscription',
                    6 => 'employee_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'endpoint',
                    'authToken',
                    'p256dhKey',
                ],
                'columnName' => [
                    1 => 'id',
                    'endpoint',
                    'auth_token',
                    'p256dh_key',
                ],
                'length' => [
                    2 => 512,
                    255,
                    255,
                ],
                'fetch' => [
                    5 => 2,
                ],
                'sourceEntity' => [
                    5 => 'App\\Entity\\PushSubscription',
                ],
                'inversedBy' => [
                    5 => 'pushSubscriptions',
                ],
                'sourceToTargetKeyColumns' => [
                    5 => [
                        'employee_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    5 => [
                        'id' => 'employee_id',
                    ],
                ],
                'joinColumns' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'joinColumnFieldNames' => [
                    5 => [
                        'employee_id' => 'employee_id',
                    ],
                ],
                'unique' => [
                    6 => false,
                ],
                'nullable' => [
                    6 => false,
                ],
                'referencedColumnName' => [
                    6 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    5 => 'employee',
                ],
                'targetEntity' => [
                    5 => 'App\\Entity\\Employee',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
